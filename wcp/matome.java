// クラスのメンバは、何と何ですか？
// →フィールドとメソッド
static 型名 フィールド変数名
-> public static int sum;
static 戻り値の型値 メソッド名(引数)
-> public static showSum(){...}


// アクセス修飾子は、何種類ありますか？
// →「public」「protected」「package-private」「private」の4種類
public = '全てのクラスからアクセスできる'
protected = '現在のクラスとサブクラスからアクセスできる'
なし = '現在のクラスと同じパッケージのクラスからアクセスできる'
private = '現在のクラスからだけアクセスできる'

// アクセス修飾子で、クラスに定義できるのは何と何ですか？
// →「public」と「package-private」の2種類


// インスタンス生成時に呼び出されるメソッドを何と呼びますか？
// →コンストラクタ(クラスのインスタンスを作成する時に実行する処理のこと)
SampleClass instanceA = new SampleClass();

// ディレクトリ階層でクラスをグループ化するしくみを何と呼びますか？
// →パッケージ

// クラスで定義された変数を何変数と呼びますか？
// →メンバ変数
static //メンバ変数がクラス変数であることを表します。
final //メンバ変数を定数として扱いたい際に使います。
transient //シリアライズすべきでないメンバ変数を表す際に使う。
volatile //あまり使わなそう

// メソッド内で定義された変数を何変数と呼びますか？
// →ローカル変数

// クラスから直接呼び出しができるメソッドを何と呼びますか？
→static(スタティック)メソッド //クラス変数、クラスメソッドという


// チェックする必要がない例外を何と呼びますか？
// →ランタイム例外（RuntimeException）
RuntimeException = '例外処理を記述しなくてもコンパイルエラーにならない。非検査例外'
Exception = '例外処理を記述しないとコンパイルエラーになる。検査例外'


// オブジェクト指向は、プログラムを何に見立ててプログラミングしますか？
// →もの（オブジェクト）

// Javaで「型」というと、何を指しますか？
// →クラス

// クラスを実体化したものを何と呼びますか？
// →インスタンス

// インスタンスを生成することを何と呼びますか？
// →インスタンス化